@c -----------------------------------------------------------------------------
@c File        : Introduction.de.texi
@c License     : GNU General Public License (GPL)
@c Language    : German
@c Original    : Introduction.texi revision 1.11
@c Translation : Dr. Dieter Kaiser
@c Date        : 15.10.2010
@c Revision    : 08.03.2011
@c 
@c This file is part of Maxima -- GPL CAS based on DOE-MACSYMA
@c -----------------------------------------------------------------------------

Von einer Kommandozeile wird Maxima mit dem Kommando @code{maxima} gestartet. 
Maxima zeigt die aktuelle Version an und gibt einen Prompt f@"ur die Eingabe 
aus.  Ein Maxima-Kommando wird mit einem Semikolon @mref{;} abgeschlossen.
Eine Maxima-Sitzung wird mit dem Kommando @code{quit();} beendet.  Es folgt
ein Beispiel f@"ur eine Sitzung.

@example
[wfs@@chromium]$ maxima
Maxima 5.9.1 http://maxima.sourceforge.net
Using Lisp CMU Common Lisp 19a
Distributed under the GNU Public License. See the file COPYING.
Dedicated to the memory of William Schelter.
This is a development version of Maxima. The function bug_report()
provides bug reporting information.
(%i1) factor(10!);
                            8  4  2
(%o1)                      2  3  5  7
(%i2) expand ((x + y)^6);
       6        5       2  4       3  3       4  2      5      6
(%o2) y  + 6 x y  + 15 x  y  + 20 x  y  + 15 x  y  + 6 x  y + x
(%i3) factor (x^6 - 1);
                              2            2
(%o3)       (x - 1) (x + 1) (x  - x + 1) (x  + x + 1)
(%i4) quit();
[wfs@@chromium]$
@end example

@noindent
Maxima kann Hilfetexte anzeigen.  Das Kommando @code{describe(text)} zeigt 
alle Inhalte an, die die Zeichenkette @code{text} enthalten.  Das Fragezeichen
@mref{?} (exakte Suche) und zwei Fragezeichen @mref{??} (ungenaue Suche) sind 
abk@"urzende Schreibweisen f@"ur die Funktion @mrefdot{describe}

@example
(%i1) ?? integrat

 0: Functions and Variables for Integration
 1: Introduction to Integration
 2: integrate (Functions and Variables for Integration)
 3: integrate_use_rootsof (Functions and Variables for Integration)
 4: integration_constant (Functions and Variables for Integration)
 5: integration_constant_counter (Functions and Variables for 
    Integration)
Enter space-separated numbers, `all' or `none': 4

 -- System variable: integration_constant
     Default value: `%c'

     When a constant of integration is introduced by indefinite
     integration of an equation, the name of the constant is
     constructed by concatenating `integration_constant' and
     `integration_constant_counter'.

     `integration_constant' may be assigned any symbol.

     Examples:

          (%i1) integrate (x^2 = 1, x);
                                     3
                                    x
          (%o1)                     -- = x + %c1
                                    3
          (%i2) integration_constant : 'k;
          (%o2)                           k
          (%i3) integrate (x^2 = 1, x);
                                      3
                                     x
          (%o3)                      -- = x + k2
                                     3


(%o1)                                true
@end example

@noindent
Das Ergebnis einer Rechnung wird mit dem Operator @mref{:} einer Variablen 
zugewiesen.  Weiterhin speichert Maxima die Eingaben unter den Marken 
@mxref{inchar,(%i)} und die Ergebnisse unter den Marken 
@mxref{outchar,(%o)} ab.  Die Marken erhalten eine fortlaufende Nummerierung.
Mit diesen Marken kann auf fr@"uhere Eingaben und Ergebnisse zur@"uckgegriffen
werden.  Auf das letzte Ergebnis kann mit @mref{%} zur@"uckgegriffen werden.

@example
(%i1) u: expand ((x + y)^6);
           6        5       2  4       3  3       4  2      5      6
(%o1)     y  + 6 x y  + 15 x  y  + 20 x  y  + 15 x  y  + 6 x  y + x
(%i2) diff(u,x);
                5         4       2  3       3  2       4        5
(%o2)        6 y  + 30 x y  + 60 x  y  + 60 x  y  + 30 x  y + 6 x
(%i3) factor(%o2);
                                           5
(%o3)                             6 (y + x)
(%i4) %/6;
                                          5
(%o4)                              (y + x)
@end example

@noindent
Maxima kennt numerische Konstanten wie die Kreiszahl @mref{%pi} oder die
imagin@"are Einheit @mref{%i} und kann mit komplexen Zahlen rechnen.  Mit der
Funktion @mref{rectform} wird eine komplexe Zahl in die Standardform gebracht,
mit der Funktion @mref{polarform} wird eine komplexe Zahl in der Polarform
dargestellt.

@example
(%i1) cos(%pi);
(%o1)                          - 1
(%i2) exp(%i*%pi);
(%o2)                          - 1
(%i3) rectform((1+%i)/(1-%i));
(%o3)                          %i
(%i4) polarform((1+%i)/(1-%i));
                              %i %pi
                              ------
                                2
(%o4)                       %e
@end example

@noindent
Maxima kann mit der Funktion @mref{diff} differenzieren und mit der Funktion
@mref{integrate} integrieren.

@example
(%i1) u: expand ((x + y)^6);
       6        5       2  4       3  3       4  2      5      6
(%o1) y  + 6 x y  + 15 x  y  + 20 x  y  + 15 x  y  + 6 x  y + x
(%i2) diff (%, x);
         5         4       2  3       3  2       4        5
(%o2) 6 y  + 30 x y  + 60 x  y  + 60 x  y  + 30 x  y + 6 x
(%i3) integrate (1/(1 + x^3), x);
                                  2 x - 1
                2            atan(-------)
           log(x  - x + 1)        sqrt(3)    log(x + 1)
(%o3)    - --------------- + ------------- + ----------
                  6             sqrt(3)          3
@end example

@noindent
Mit den Funktionen @mref{linsolve} und @mref{solve} kann Maxima lineare
Gleichungssysteme und kubische Gleichungen l@"osen.

@example
(%i1) linsolve ([3*x + 4*y = 7, 2*x + a*y = 13], [x, y]);
                        7 a - 52        25
(%o1)              [x = --------, y = -------]
                        3 a - 8       3 a - 8
(%i2) solve (x^3 - 3*x^2 + 5*x = 15, x);
(%o2)       [x = - sqrt(5) %i, x = sqrt(5) %i, x = 3]
@end example

@noindent
Die Funktion @mref{solve} kann auch nichtlineare Gleichungssysteme l@"osen.
Wird eine Eingabe mit @mref{$} anstatt @mref{;} abgeschlossen, wird keine
Ausgabe erzeugt.

@example
(%i1) eq_1: x^2 + 3*x*y + y^2 = 0$
(%i2) eq_2: 3*x + y = 1$
(%i3) solve ([eq_1, eq_2]);
              3 sqrt(5) + 7      sqrt(5) + 3
(%o3) [[y = - -------------, x = -----------], 
                    2                 2

                               3 sqrt(5) - 7        sqrt(5) - 3
                          [y = -------------, x = - -----------]]
                                     2                   2
@end example

@noindent
Mit den Funktionen @mref{plot2d} und @mref{plot3d} kann Maxima Funktionsgraphen
mit einer oder mehreren Funktionen zeichnen.

@example
(%i1) plot2d(sin(x)/x, [x, -20, 20])$
@end example

@ifnotinfo
@image{@value{figuresfolder}/introduction1, 10cm}
@end ifnotinfo

@example
(%i2) plot2d([atan(x), erf(x), tanh(x)], [x, -5, 5], [y, -1.5, 2])$
@end example

@ifnotinfo
@image{@value{figuresfolder}/introduction2, 10cm}
@end ifnotinfo

@example
@group
(%i3) plot3d(sin(sqrt(x^2 + y^2))/sqrt(x^2 + y^2), 
         [x, -12, 12], [y, -12, 12])$
@end group
@end example

@ifnotinfo
@image{@value{figuresfolder}/introduction3, 12cm}
@end ifnotinfo

@c --- End of file Introduction.de.texi ----------------------------------------

