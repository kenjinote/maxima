@c Language=Russian
@c Encoding=UTF-8
@c File=Limits.texi 
@c OriginalRevision=1.14
@c TranslatedBy: (c) 2007-05-23 Alexey V. Beshenov <al@beshenov.ru>

@menu
* Функции для работы с пределами::
@end menu

@node Функции для работы с пределами,  , Пределы, Пределы
@section Функции для работы с пределами

@defvr {Управляющая переменная} lhospitallim
Значение по умолчанию: 4

@code{lhospitallim} есть максимальное число применений правила Лопиталя в
@code{limit}. Это предотвращает зацикливание в случаях вроде 
@code{limit (cot(x)/csc(x), x, 0)}.

@opencatbox{Категории:}
@category{Пределы}
@closecatbox
@end defvr

@deffn {Функция} limit (@var{expr}, @var{x}, @var{val}, @var{dir})
@deffnx {Функция} limit (@var{expr}, @var{x}, @var{val})
@deffnx {Функция} limit (@var{expr})
Рассчитывает предел @var{expr} при стремлении вещественной переменной
@var{x} к @var{val} по направлению @var{dir}.  @var{dir} может иметь значение
@code{plus} для предела справа, @code{minus} для предела слева, либо
опускаться (будет рассчитан двусторонний предел).

@code{limit} использует специальные символы: @code{inf} (плюс бесконечность) и
@code{minf} (минус бесконечность). Вывод может использовать @code{und} (неопределенность),
@code{ind} (неопределенность, но ограниченность) и @code{infinity} (комплексная бесконечность).

@code{lhospitallim} есть максимальное число применений правила Лопиталя в
@code{limit}. Это предотвращает зацикливание в случаях вроде 
@code{limit (cot(x)/csc(x), x, 0)}.

Если @code{tlimswitch} равно @code{true}, команда @code{limit} использует разложение в ряды Тейлора
там, где это возможно.

@code{limsubst} предотвращает подстановки над неизвестными формами в @code{limit}. Это
позволяет избежать ошибок, когда выражение вида @code{limit (f(n)/f(n+1), n, inf)}
дает 1. Подобные подстановки будут использоваться, если @code{limsubst} равно @code{true}.

@code{limit}  с одним аргументом часто вызывается для упрощения константных выражений,
например @code{limit (inf-1)}.

@c MERGE EXAMPLES INTO THIS FILE
@code{example (limit)}  выводит некоторые примеры.

Относительно метода см. Wang, P., "Evaluation of Definite Integrals by Symbolic
Manipulation", Ph.D. thesis, MAC TR-92, October 1971.

@opencatbox{Категории:}
@category{Пределы}
@closecatbox
@end deffn

@defvr {Управляющая переменная} limsubst
Значение по умолчанию: @code{false} -- предотвращает подстановки над неизвестными формами в @code{limit}. Это
позволяет избежать ошибок, когда выражение вида @code{limit (f(n)/f(n+1), n, inf)}
дает 1. Подобные подстановки будут использоваться, если @code{limsubst} равно @code{true}.

@opencatbox{Категории:}
@category{Пределы}
@closecatbox
@end defvr

@deffn {Функция} tlimit (@var{expr}, @var{x}, @var{val}, @var{dir})
@deffnx {Функция} tlimit (@var{expr}, @var{x}, @var{val})
@deffnx {Функция} tlimit (@var{expr})
Вычисляет предел разложения выражения @code{expr} в ряд Тейлора в точке @code{x}
равной @code{val} с направления @code{dir}.

@opencatbox{Категории:}
@category{Пределы}
@closecatbox
@end deffn

@defvr {Управляющая переменная} tlimswitch
Значение по умолчанию: @code{true}

Если значение @code{tlimswitch} равно @code{true}, то команда @code{limit} будет 
использовать разложение в ряд Тейлора, если предел выражения не может быть
вычислен непосредственно.
Это позволяет вычислять пределы типа @code{limit(x/(x-1)-1/log(x),x,1,plus)}.
Если значение @code{tlimswitch} равно @code{false} и предел выражения не может быть вычислен
непосредственно, то @code{limit} возвращает исходное выражение предела невычисленным.

@opencatbox{Категории:}
@category{Пределы}
@closecatbox
@end defvr

