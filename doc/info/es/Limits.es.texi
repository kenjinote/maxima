@c English version 2013-03-31
@menu
* Funciones y variables para límites::      
@end menu

@node Funciones y variables para límites,  ,Límites,Límites 

@section Funciones y variables para límites

@defvr {Variable optativa} lhospitallim
Valor por defecto: 4

Es el número máximo de veces que la regla de L'Hopital es aplicada en la función @code{limit}, evitando bucles infinitos al iterar la regla en casos como @code{limit (cot(x)/csc(x), x, 0)}.

@end defvr

@deffn {Función} limit (@var{expr}, @var{x}, @var{val}, @var{dir})
@deffnx {Función} limit (@var{expr}, @var{x}, @var{val})
@deffnx {Función} limit (@var{expr})
Calcula el límite de @var{expr} cuando la variable real @var{x}
se aproxima al valor @var{val} desde la dirección @var{dir}. El argumento 
@var{dir} puede ser el valor @code{plus} para un límite por la 
derecha, @code{minus} para un límite por la izquierda o simplemente 
se omite para indicar un límite en ambos sentidos.

La función @code{limit} utiliza los símbolos especiales 
siguientes: @code{inf} (más infinito) y @code{minf} (menos
infinito). En el resultado también puede hacer uso de @code{und} (indefinido), 
@code{ind} (indefinido pero acotado) y @code{infinity} (infinito complejo).

@code{infinity} (infinito complejo) es el resultado que se obtiene cuando
el límite del módulo de la expresión es infinito
positivo, pero el propio límite de la expresión no es infinito
positivo ni negativo. Esto sucede, por ejemplo, cuando el límite del
argumento complejo es una constante, como en @code{limit(log(x), x, minf)},
o cuando el argumento complejo oscila, como en @code{limit((-2)^x, x, inf)}, o
en aquellos casos en los que el argumento complejo es diferente por cualquiera
de los lados de un límite, como en @code{limit(1/x, x, 0)}
o @code{limit(log(x), x, 0)}.

La variable @code{lhospitallim} guarda el número máximo de veces que la regla 
de L'Hopital es aplicada en la función @code{limit}, evitando bucles infinitos 
al iterar la regla en casos como @code{limit (cot(x)/csc(x), x, 0)}.

Si la variable @code{tlimswitch} vale @code{true}, hará que la función 
@code{limit} utilice desarrollos de Taylor siempre que le sea posible.

La variable @code{limsubst} evita que la función @code{limit} realice 
sustituciones sobre formas desconocidas, a fin de evitar fallos tales como 
que @code{limit (f(n)/f(n+1), n, inf)} devuelva 1.  Dándole a @code{limsubst} 
el valor @code{true} se permitirán tales sustituciones.

La función @code{limit} con un solo argumento se utiliza frecuentemente para 
simplificar expresiones constantes, como por ejemplo @code{limit (inf-1)}.

@c MERGE EXAMPLES INTO THIS FILE
La instrucción @code{example (limit)} muestra algunos ejemplos.

Para información sobre el método utilizado véase Wang, P., "Evaluation of 
Definite Integrals by Symbolic
Manipulation", Ph.D. thesis, MAC TR-92, October 1971.

@end deffn

@defvr {Variable optativa} limsubst
Valor por defecto: @code{false}

La variable @code{limsubst} evita que la función @code{limit} realice sustituciones 
sobre formas desconocidas, a fin de evitar fallos tales como que 
@code{limit (f(n)/f(n+1), n, inf)} devuelva 1.  Dándole a @code{limsubst} el valor 
@code{true} se permitirán tales sustituciones.

@end defvr

@deffn {Función} tlimit (@var{expr}, @var{x}, @var{val}, @var{dir})
@deffnx {Función} tlimit (@var{expr}, @var{x}, @var{val})
@deffnx {Función} tlimit (@var{expr})
Calcula el límite del desarrollo de Taylor de la expresión
@code{expr} de variable @code{x} en el punto @code{val} en la dirección @code{dir}.
@end deffn

@defvr {Variable optativa} tlimswitch
Valor por defecto: @code{true}

Si @code{tlimswitch} vale @code{true}, la función @code{limit} utilizará
un desarrollo de Taylor si el límite de la expresión dada no
se puede calcular directamente. Esto permite el cálculo de límites
como @code{limit(x/(x-1)-1/log(x),x,1,plus)}.
Si @code{tlimswitch} vale @code{false} y el límite de la expresión
no se puede calcular directamente, la función @code{limit} devolverá una expresión
sin evaluar.
@end defvr


